{"ast":null,"code":"// API helper functions for Open-Meteo\nexport async function getCoordinates(city){const response=await fetch(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(encodeURIComponent(city),\"&count=1\"));const data=await response.json();if(data.results&&data.results.length>0){return{latitude:data.results[0].latitude,longitude:data.results[0].longitude};}throw new Error(\"City not found.\");}export async function getWeather(latitude,longitude){const response=await fetch(\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(latitude,\"&longitude=\").concat(longitude,\"&current_weather=true\"));const data=await response.json();if(data.current_weather&&typeof data.current_weather.temperature===\"number\"){return data.current_weather.temperature;}throw new Error(\"Weather data not available.\");}","map":{"version":3,"names":["getCoordinates","city","response","fetch","concat","encodeURIComponent","data","json","results","length","latitude","longitude","Error","getWeather","current_weather","temperature"],"sources":["C:/Users/IDAN/Weather-App/weather-app/src/components/WeatherDisplay.js"],"sourcesContent":["// API helper functions for Open-Meteo\r\n\r\nexport async function getCoordinates(city) {\r\n  const response = await fetch(\r\n    `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(city)}&count=1`\r\n  );\r\n  const data = await response.json();\r\n  if (data.results && data.results.length > 0) {\r\n    return {\r\n      latitude: data.results[0].latitude,\r\n      longitude: data.results[0].longitude,\r\n    };\r\n  }\r\n  throw new Error(\"City not found.\");\r\n}\r\n\r\nexport async function getWeather(latitude, longitude) {\r\n  const response = await fetch(\r\n    `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`\r\n  );\r\n  const data = await response.json();\r\n  if (data.current_weather && typeof data.current_weather.temperature === \"number\") {\r\n    return data.current_weather.temperature;\r\n  }\r\n  throw new Error(\"Weather data not available.\");\r\n}"],"mappings":"AAAA;AAEA,MAAO,eAAe,CAAAA,cAAcA,CAACC,IAAI,CAAE,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,wDAAAC,MAAA,CAC6BC,kBAAkB,CAACJ,IAAI,CAAC,YACjF,CAAC,CACD,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACE,OAAO,EAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CAC3C,MAAO,CACLC,QAAQ,CAAEJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,QAAQ,CAClCC,SAAS,CAAEL,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG,SAC7B,CAAC,CACH,CACA,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiB,CAAC,CACpC,CAEA,MAAO,eAAe,CAAAC,UAAUA,CAACH,QAAQ,CAAEC,SAAS,CAAE,CACpD,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,oDAAAC,MAAA,CACyBM,QAAQ,gBAAAN,MAAA,CAAcO,SAAS,yBACpF,CAAC,CACD,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACQ,eAAe,EAAI,MAAO,CAAAR,IAAI,CAACQ,eAAe,CAACC,WAAW,GAAK,QAAQ,CAAE,CAChF,MAAO,CAAAT,IAAI,CAACQ,eAAe,CAACC,WAAW,CACzC,CACA,KAAM,IAAI,CAAAH,KAAK,CAAC,6BAA6B,CAAC,CAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}