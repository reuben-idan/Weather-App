{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IDAN\\\\Weather App\\\\weather-app\\\\src\\\\components\\\\MultiCityWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getCoordinates, getWeather } from \"./WeatherDisplay\";\nimport { fetchWeatherWithCache } from \"../utils/weatherCache\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiCityWeather() {\n  _s();\n  const [cities, setCities] = useState([\"London\", \"Paris\"]);\n  const [input, setInput] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const handleAddCity = e => {\n    e.preventDefault();\n    const city = input.trim();\n    if (city && !cities.includes(city)) {\n      setCities([...cities, city]);\n    }\n    setInput(\"\");\n  };\n  useEffect(() => {\n    async function fetchAll() {\n      setLoading(true);\n      const results = {};\n      for (const city of cities) {\n        try {\n          const coords = await fetchWeatherWithCache(`coords_${city}`, () => getCoordinates(city));\n          const temp = await fetchWeatherWithCache(`weather_${city}`, () => getWeather(coords.latitude, coords.longitude));\n          results[city] = {\n            temp,\n            coords\n          };\n        } catch {\n          results[city] = {\n            temp: \"N/A\"\n          };\n        }\n      }\n      setWeatherData(results);\n      setLoading(false);\n    }\n    fetchAll();\n    // eslint-disable-next-line\n  }, [cities.join(\",\")]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multi-city-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCity,\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Add city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multi-city-list\",\n      children: cities.map(city => {\n        var _weatherData$city;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multi-city-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"city-name\",\n            children: city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"city-temp\",\n            children: ((_weatherData$city = weatherData[city]) === null || _weatherData$city === void 0 ? void 0 : _weatherData$city.temp) !== undefined ? `${weatherData[city].temp}°C` : \"…\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, city, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiCityWeather, \"yp/M8nyS2rxllK08k+Q/+t/pnL4=\");\n_c = MultiCityWeather;\nvar _c;\n$RefreshReg$(_c, \"MultiCityWeather\");","map":{"version":3,"names":["React","useState","useEffect","getCoordinates","getWeather","fetchWeatherWithCache","jsxDEV","_jsxDEV","MultiCityWeather","_s","cities","setCities","input","setInput","weatherData","setWeatherData","loading","setLoading","handleAddCity","e","preventDefault","city","trim","includes","fetchAll","results","coords","temp","latitude","longitude","join","className","children","onSubmit","style","marginBottom","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","map","_weatherData$city","undefined","_c","$RefreshReg$"],"sources":["C:/Users/IDAN/Weather App/weather-app/src/components/MultiCityWeather.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getCoordinates, getWeather } from \"./WeatherDisplay\";\r\nimport { fetchWeatherWithCache } from \"../utils/weatherCache\";\r\n\r\nexport default function MultiCityWeather() {\r\n  const [cities, setCities] = useState([\"London\", \"Paris\"]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleAddCity = (e) => {\r\n    e.preventDefault();\r\n    const city = input.trim();\r\n    if (city && !cities.includes(city)) {\r\n      setCities([...cities, city]);\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchAll() {\r\n      setLoading(true);\r\n      const results = {};\r\n      for (const city of cities) {\r\n        try {\r\n          const coords = await fetchWeatherWithCache(\r\n            `coords_${city}`,\r\n            () => getCoordinates(city)\r\n          );\r\n          const temp = await fetchWeatherWithCache(\r\n            `weather_${city}`,\r\n            () => getWeather(coords.latitude, coords.longitude)\r\n          );\r\n          results[city] = { temp, coords };\r\n        } catch {\r\n          results[city] = { temp: \"N/A\" };\r\n        }\r\n      }\r\n      setWeatherData(results);\r\n      setLoading(false);\r\n    }\r\n    fetchAll();\r\n    // eslint-disable-next-line\r\n  }, [cities.join(\",\")]);\r\n\r\n  return (\r\n    <div className=\"multi-city-container\">\r\n      <form onSubmit={handleAddCity} style={{ marginBottom: 16 }}>\r\n        <input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder=\"Add city\"\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      {loading && <div>Loading...</div>}\r\n      <div className=\"multi-city-list\">\r\n        {cities.map(city => (\r\n          <div className=\"multi-city-card\" key={city}>\r\n            <div className=\"city-name\">{city}</div>\r\n            <div className=\"city-temp\">\r\n              {weatherData[city]?.temp !== undefined\r\n                ? `${weatherData[city].temp}°C`\r\n                : \"…\"}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}