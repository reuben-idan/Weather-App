{"ast":null,"code":"import React,{useState}from\"react\";import SearchBar from\"./components/SearchBar\";// Helper function to get latitude/longitude for a city using Open-Meteo's geocoding API\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";async function getCoordinates(city){const response=await fetch(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(encodeURIComponent(city),\"&count=1\"));const data=await response.json();if(data.results&&data.results.length>0){return{lat:data.results[0].latitude,lon:data.results[0].longitude};}throw new Error(\"City not found\");}function App(){const[temperature,setTemperature]=useState(null);const[error,setError]=useState(\"\");const handleSearch=async city=>{setError(\"\");setTemperature(null);try{const{lat,lon}=await getCoordinates(city);const weatherResponse=await fetch(\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(lat,\"&longitude=\").concat(lon,\"&current_weather=true\"));const weatherData=await weatherResponse.json();if(weatherData.current_weather){setTemperature(weatherData.current_weather.temperature);}else{setError(\"Weather data not available.\");}}catch(err){setError(\"City not found or API error.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),temperature!==null&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Current temperature: \",temperature,\"\\xB0C\"]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error})]});}export default App;","map":{"version":3,"names":["React","useState","SearchBar","jsx","_jsx","jsxs","_jsxs","getCoordinates","city","response","fetch","concat","encodeURIComponent","data","json","results","length","lat","latitude","lon","longitude","Error","App","temperature","setTemperature","error","setError","handleSearch","weatherResponse","weatherData","current_weather","err","children","onSearch","style","color"],"sources":["C:/Users/IDAN/Weather App/weather-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\n\n// Helper function to get latitude/longitude for a city using Open-Meteo's geocoding API\nasync function getCoordinates(city) {\n  const response = await fetch(\n    `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(\n      city\n    )}&count=1`\n  );\n  const data = await response.json();\n  if (data.results && data.results.length > 0) {\n    return {\n      lat: data.results[0].latitude,\n      lon: data.results[0].longitude,\n    };\n  }\n  throw new Error(\"City not found\");\n}\n\nfunction App() {\n  const [temperature, setTemperature] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleSearch = async (city) => {\n    setError(\"\");\n    setTemperature(null);\n    try {\n      const { lat, lon } = await getCoordinates(city);\n      const weatherResponse = await fetch(\n        `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true`\n      );\n      const weatherData = await weatherResponse.json();\n      if (weatherData.current_weather) {\n        setTemperature(weatherData.current_weather.temperature);\n      } else {\n        setError(\"Weather data not available.\");\n      }\n    } catch (err) {\n      setError(\"City not found or API error.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Weather App</h1>\n      <SearchBar onSearch={handleSearch} />\n      {temperature !== null && <p>Current temperature: {temperature}Â°C</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,cAAe,CAAAC,cAAcA,CAACC,IAAI,CAAE,CAClC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,wDAAAC,MAAA,CAC6BC,kBAAkB,CACvEJ,IACF,CAAC,YACH,CAAC,CACD,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACE,OAAO,EAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CAC3C,MAAO,CACLC,GAAG,CAAEJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG,QAAQ,CAC7BC,GAAG,CAAEN,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACK,SACvB,CAAC,CACH,CACA,KAAM,IAAI,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CACnC,CAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACwB,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAA0B,YAAY,CAAG,KAAO,CAAAnB,IAAI,EAAK,CACnCkB,QAAQ,CAAC,EAAE,CAAC,CACZF,cAAc,CAAC,IAAI,CAAC,CACpB,GAAI,CACF,KAAM,CAAEP,GAAG,CAAEE,GAAI,CAAC,CAAG,KAAM,CAAAZ,cAAc,CAACC,IAAI,CAAC,CAC/C,KAAM,CAAAoB,eAAe,CAAG,KAAM,CAAAlB,KAAK,oDAAAC,MAAA,CACkBM,GAAG,gBAAAN,MAAA,CAAcQ,GAAG,yBACzE,CAAC,CACD,KAAM,CAAAU,WAAW,CAAG,KAAM,CAAAD,eAAe,CAACd,IAAI,CAAC,CAAC,CAChD,GAAIe,WAAW,CAACC,eAAe,CAAE,CAC/BN,cAAc,CAACK,WAAW,CAACC,eAAe,CAACP,WAAW,CAAC,CACzD,CAAC,IAAM,CACLG,QAAQ,CAAC,6BAA6B,CAAC,CACzC,CACF,CAAE,MAAOK,GAAG,CAAE,CACZL,QAAQ,CAAC,8BAA8B,CAAC,CAC1C,CACF,CAAC,CAED,mBACEpB,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB5B,IAAA,CAACF,SAAS,EAAC+B,QAAQ,CAAEN,YAAa,CAAE,CAAC,CACpCJ,WAAW,GAAK,IAAI,eAAIjB,KAAA,MAAA0B,QAAA,EAAG,uBAAqB,CAACT,WAAW,CAAC,OAAE,EAAG,CAAC,CACnEE,KAAK,eAAIrB,IAAA,MAAG8B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAH,QAAA,CAAEP,KAAK,CAAI,CAAC,EAC9C,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}