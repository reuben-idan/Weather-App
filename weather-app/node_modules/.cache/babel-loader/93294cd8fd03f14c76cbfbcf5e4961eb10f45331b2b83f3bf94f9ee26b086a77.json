{"ast":null,"code":"import _objectSpread from\"C:/Users/IDAN/Weather-App/weather-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{getCoordinates,getWeather}from\"./WeatherDisplay\";import{fetchWeatherWithCache}from\"../utils/weatherCache\";import\"./MultiCityWeather.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MultiCityWeather(){const[cities,setCities]=useState([\"London\",\"Paris\",\"New York\"]);const[input,setInput]=useState(\"\");const[weatherData,setWeatherData]=useState({});const[loading,setLoading]=useState(false);const[isAdding,setIsAdding]=useState(false);const handleAddCity=e=>{e.preventDefault();const city=input.trim();if(city&&!cities.includes(city)){setCities([...cities,city]);setInput(\"\");setIsAdding(false);}};const handleRemoveCity=cityToRemove=>{setCities(cities.filter(city=>city!==cityToRemove));const newWeatherData=_objectSpread({},weatherData);delete newWeatherData[cityToRemove];setWeatherData(newWeatherData);};const handleKeyPress=e=>{if(e.key===\"Enter\"){handleAddCity(e);}else if(e.key===\"Escape\"){setIsAdding(false);setInput(\"\");}};useEffect(()=>{async function fetchAll(){setLoading(true);const results={};for(const city of cities){try{const coords=await fetchWeatherWithCache(\"coords_\".concat(city),()=>getCoordinates(city));const temp=await fetchWeatherWithCache(\"weather_\".concat(city),()=>getWeather(coords.latitude,coords.longitude));results[city]={temp,coords};}catch(_unused){results[city]={temp:\"N/A\"};}}setWeatherData(results);setLoading(false);}fetchAll();// eslint-disable-next-line\n},[cities.join(\",\")]);return/*#__PURE__*/_jsxs(\"div\",{className:\"multi-city-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"multi-city-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"multi-city-title\",children:\"Global Weather\"}),/*#__PURE__*/_jsx(\"p\",{className:\"multi-city-subtitle\",children:\"Track weather across multiple cities\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"multi-city-controls\",children:!isAdding?/*#__PURE__*/_jsxs(\"button\",{className:\"add-city-button\",onClick:()=>setIsAdding(true),children:[/*#__PURE__*/_jsx(\"span\",{className:\"add-icon\",children:\"+\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Add City\"})]}):/*#__PURE__*/_jsx(\"form\",{className:\"add-city-form\",onSubmit:handleAddCity,children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"city-input\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:handleKeyPress,placeholder:\"Enter city name...\",autoFocus:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"confirm-button\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2713\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-button\",onClick:()=>{setIsAdding(false);setInput(\"\");},children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2715\"})})]})]})})}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"multi-city-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Updating weather data...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"multi-city-grid\",children:cities.map(city=>{var _weatherData$city,_weatherData$city2;return/*#__PURE__*/_jsxs(\"div\",{className:\"city-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"city-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"city-name\",children:city}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-city-button\",onClick:()=>handleRemoveCity(city),title:\"Remove city\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-weather\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"city-temp\",children:((_weatherData$city=weatherData[city])===null||_weatherData$city===void 0?void 0:_weatherData$city.temp)!==undefined&&weatherData[city].temp!==\"N/A\"?\"\".concat(Math.round(weatherData[city].temp),\"\\xB0C\"):\"—\"}),/*#__PURE__*/_jsx(\"div\",{className:\"city-status\",children:((_weatherData$city2=weatherData[city])===null||_weatherData$city2===void 0?void 0:_weatherData$city2.temp)!==undefined&&weatherData[city].temp!==\"N/A\"?\"Updated\":\"Loading...\"})]})]},city);})}),cities.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83C\\uDF0D\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No cities added yet\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add a city to start tracking weather\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","getCoordinates","getWeather","fetchWeatherWithCache","jsx","_jsx","jsxs","_jsxs","MultiCityWeather","cities","setCities","input","setInput","weatherData","setWeatherData","loading","setLoading","isAdding","setIsAdding","handleAddCity","e","preventDefault","city","trim","includes","handleRemoveCity","cityToRemove","filter","newWeatherData","_objectSpread","handleKeyPress","key","fetchAll","results","coords","concat","temp","latitude","longitude","_unused","join","className","children","onClick","onSubmit","value","onChange","target","onKeyDown","placeholder","autoFocus","type","map","_weatherData$city","_weatherData$city2","title","undefined","Math","round","length"],"sources":["C:/Users/IDAN/Weather-App/weather-app/src/components/MultiCityWeather.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getCoordinates, getWeather } from \"./WeatherDisplay\";\r\nimport { fetchWeatherWithCache } from \"../utils/weatherCache\";\r\nimport \"./MultiCityWeather.css\";\r\n\r\nexport default function MultiCityWeather() {\r\n  const [cities, setCities] = useState([\"London\", \"Paris\", \"New York\"]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const handleAddCity = (e) => {\r\n    e.preventDefault();\r\n    const city = input.trim();\r\n    if (city && !cities.includes(city)) {\r\n      setCities([...cities, city]);\r\n      setInput(\"\");\r\n      setIsAdding(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveCity = (cityToRemove) => {\r\n    setCities(cities.filter((city) => city !== cityToRemove));\r\n    const newWeatherData = { ...weatherData };\r\n    delete newWeatherData[cityToRemove];\r\n    setWeatherData(newWeatherData);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddCity(e);\r\n    } else if (e.key === \"Escape\") {\r\n      setIsAdding(false);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchAll() {\r\n      setLoading(true);\r\n      const results = {};\r\n      for (const city of cities) {\r\n        try {\r\n          const coords = await fetchWeatherWithCache(`coords_${city}`, () =>\r\n            getCoordinates(city)\r\n          );\r\n          const temp = await fetchWeatherWithCache(`weather_${city}`, () =>\r\n            getWeather(coords.latitude, coords.longitude)\r\n          );\r\n          results[city] = { temp, coords };\r\n        } catch {\r\n          results[city] = { temp: \"N/A\" };\r\n        }\r\n      }\r\n      setWeatherData(results);\r\n      setLoading(false);\r\n    }\r\n    fetchAll();\r\n    // eslint-disable-next-line\r\n  }, [cities.join(\",\")]);\r\n\r\n  return (\r\n    <div className=\"multi-city-container\">\r\n      <div className=\"multi-city-header\">\r\n        <h3 className=\"multi-city-title\">Global Weather</h3>\r\n        <p className=\"multi-city-subtitle\">\r\n          Track weather across multiple cities\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"multi-city-controls\">\r\n        {!isAdding ? (\r\n          <button className=\"add-city-button\" onClick={() => setIsAdding(true)}>\r\n            <span className=\"add-icon\">+</span>\r\n            <span>Add City</span>\r\n          </button>\r\n        ) : (\r\n          <form className=\"add-city-form\" onSubmit={handleAddCity}>\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"city-input\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyDown={handleKeyPress}\r\n                placeholder=\"Enter city name...\"\r\n                autoFocus\r\n              />\r\n              <div className=\"input-actions\">\r\n                <button type=\"submit\" className=\"confirm-button\">\r\n                  <span>✓</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-button\"\r\n                  onClick={() => {\r\n                    setIsAdding(false);\r\n                    setInput(\"\");\r\n                  }}\r\n                >\r\n                  <span>✕</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"multi-city-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <span>Updating weather data...</span>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"multi-city-grid\">\r\n        {cities.map((city) => (\r\n          <div className=\"city-card\" key={city}>\r\n            <div className=\"city-card-header\">\r\n              <h4 className=\"city-name\">{city}</h4>\r\n              <button\r\n                className=\"remove-city-button\"\r\n                onClick={() => handleRemoveCity(city)}\r\n                title=\"Remove city\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"city-weather\">\r\n              <div className=\"city-temp\">\r\n                {weatherData[city]?.temp !== undefined &&\r\n                weatherData[city].temp !== \"N/A\"\r\n                  ? `${Math.round(weatherData[city].temp)}°C`\r\n                  : \"—\"}\r\n              </div>\r\n\r\n              <div className=\"city-status\">\r\n                {weatherData[city]?.temp !== undefined &&\r\n                weatherData[city].temp !== \"N/A\"\r\n                  ? \"Updated\"\r\n                  : \"Loading...\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {cities.length === 0 && (\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">🌍</div>\r\n          <p>No cities added yet</p>\r\n          <p>Add a city to start tracking weather</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}