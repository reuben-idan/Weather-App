{"ast":null,"code":"import React,{useState}from\"react\";import SearchBar from\"./components/SearchBar\";import{getCoordinates,getWeather}from\"./components/WeatherDisplay\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[temperature,setTemperature]=useState(null);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const handleSearch=async city=>{setError(\"\");setTemperature(null);setLoading(true);try{const{lat,lon}=await getCoordinates(city);const temp=await getWeather(lat,lon);setTemperature(temp);}catch(err){setError(err.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"2rem\",fontFamily:\"Arial, sans-serif\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),temperature!==null&&!loading&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Current temperature: \",temperature,\"\\xB0C\"]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error})]});}export default App;","map":{"version":3,"names":["React","useState","SearchBar","getCoordinates","getWeather","jsx","_jsx","jsxs","_jsxs","App","temperature","setTemperature","error","setError","loading","setLoading","handleSearch","city","lat","lon","temp","err","message","style","padding","fontFamily","children","onSearch","color"],"sources":["C:/Users/IDAN/Weather App/weather-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport { getCoordinates, getWeather } from \"./components/WeatherDisplay\";\n\nfunction App() {\n  const [temperature, setTemperature] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = async (city) => {\n    setError(\"\");\n    setTemperature(null);\n    setLoading(true);\n\n    try {\n      const { lat, lon } = await getCoordinates(city);\n      const temp = await getWeather(lat, lon);\n      setTemperature(temp);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1>Weather App</h1>\n      <SearchBar onSearch={handleSearch} />\n      {loading && <p>Loading...</p>}\n      {temperature !== null && !loading && (\n        <p>Current temperature: {temperature}Â°C</p>\n      )}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,cAAc,CAAEC,UAAU,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAe,YAAY,CAAG,KAAO,CAAAC,IAAI,EAAK,CACnCJ,QAAQ,CAAC,EAAE,CAAC,CACZF,cAAc,CAAC,IAAI,CAAC,CACpBI,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF,KAAM,CAAEG,GAAG,CAAEC,GAAI,CAAC,CAAG,KAAM,CAAAhB,cAAc,CAACc,IAAI,CAAC,CAC/C,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAhB,UAAU,CAACc,GAAG,CAAEC,GAAG,CAAC,CACvCR,cAAc,CAACS,IAAI,CAAC,CACtB,CAAE,MAAOC,GAAG,CAAE,CACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,KAAA,QAAKe,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,mBAAoB,CAAE,CAAAC,QAAA,eAC/DpB,IAAA,OAAAoB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBpB,IAAA,CAACJ,SAAS,EAACyB,QAAQ,CAAEX,YAAa,CAAE,CAAC,CACpCF,OAAO,eAAIR,IAAA,MAAAoB,QAAA,CAAG,YAAU,CAAG,CAAC,CAC5BhB,WAAW,GAAK,IAAI,EAAI,CAACI,OAAO,eAC/BN,KAAA,MAAAkB,QAAA,EAAG,uBAAqB,CAAChB,WAAW,CAAC,OAAE,EAAG,CAC3C,CACAE,KAAK,eAAIN,IAAA,MAAGiB,KAAK,CAAE,CAAEK,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAEd,KAAK,CAAI,CAAC,EAC9C,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}