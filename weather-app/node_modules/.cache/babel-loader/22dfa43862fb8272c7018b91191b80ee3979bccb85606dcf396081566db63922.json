{"ast":null,"code":"// API helper functions for Open-Meteo\n\nexport async function getCoordinates(city) {\n  const response = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(city)}&count=1`);\n  const data = await response.json();\n  if (data.results && data.results.length > 0) {\n    return {\n      latitude: data.results[0].latitude,\n      longitude: data.results[0].longitude\n    };\n  }\n  throw new Error(\"City not found.\");\n}\nexport async function getWeather(latitude, longitude) {\n  const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`);\n  const data = await response.json();\n  if (data.current_weather && typeof data.current_weather.temperature === \"number\") {\n    return data.current_weather.temperature;\n  }\n  throw new Error(\"Weather data not available.\");\n}","map":{"version":3,"names":["getCoordinates","city","response","fetch","encodeURIComponent","data","json","results","length","latitude","longitude","Error","getWeather","current_weather","temperature"],"sources":["C:/Users/IDAN/Weather-App/weather-app/src/components/WeatherDisplay.js"],"sourcesContent":["// API helper functions for Open-Meteo\r\n\r\nexport async function getCoordinates(city) {\r\n  const response = await fetch(\r\n    `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(city)}&count=1`\r\n  );\r\n  const data = await response.json();\r\n  if (data.results && data.results.length > 0) {\r\n    return {\r\n      latitude: data.results[0].latitude,\r\n      longitude: data.results[0].longitude,\r\n    };\r\n  }\r\n  throw new Error(\"City not found.\");\r\n}\r\n\r\nexport async function getWeather(latitude, longitude) {\r\n  const response = await fetch(\r\n    `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`\r\n  );\r\n  const data = await response.json();\r\n  if (data.current_weather && typeof data.current_weather.temperature === \"number\") {\r\n    return data.current_weather.temperature;\r\n  }\r\n  throw new Error(\"Weather data not available.\");\r\n}"],"mappings":"AAAA;;AAEA,OAAO,eAAeA,cAAcA,CAACC,IAAI,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAAuDC,kBAAkB,CAACH,IAAI,CAAC,UACjF,CAAC;EACD,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IAC3C,OAAO;MACLC,QAAQ,EAAEJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,QAAQ;MAClCC,SAAS,EAAEL,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG;IAC7B,CAAC;EACH;EACA,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;AACpC;AAEA,OAAO,eAAeC,UAAUA,CAACH,QAAQ,EAAEC,SAAS,EAAE;EACpD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDAAmDM,QAAQ,cAAcC,SAAS,uBACpF,CAAC;EACD,MAAML,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,CAACQ,eAAe,IAAI,OAAOR,IAAI,CAACQ,eAAe,CAACC,WAAW,KAAK,QAAQ,EAAE;IAChF,OAAOT,IAAI,CAACQ,eAAe,CAACC,WAAW;EACzC;EACA,MAAM,IAAIH,KAAK,CAAC,6BAA6B,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}